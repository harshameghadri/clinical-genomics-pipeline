/*
 * Main Nextflow configuration
 * Clinical Genomics Pipeline v1.0.0
 */

// Default parameters
params {
    // Input/Output
    dna_samples = null
    rna_samples = null
    outdir = "./results"
    
    // Reference data
    reference = null
    reference_fasta = "${params.reference}/genome.fa"
    reference_gtf = "${params.reference}/genes.gtf"
    reference_star_index = "${params.reference}/star_index"
    
    // Tool parameters
    threads = 16
    memory = '32.GB'
    
    // Quality control
    min_read_length = 50
    min_base_quality = 20
    
    // Alignment
    bwa_mem2_opts = '-M -R'
    star_opts = '--outSAMtype BAM SortedByCoordinate'
    
    // Variant calling
    deepvariant_model = 'WGS'  // or 'WES'
    min_variant_quality = 20
    
    // Expression quantification
    salmon_libtype = 'A'  // auto-detect
    
    // GDPR compliance
    anonymize_samples = true
    remove_intermediate = false
    
    // Container settings
    container_engine = 'docker'
    container_cache = './containers'
    
    // Metadata
    project_id = 'clinical_genomics_v1'
    analysis_date = new Date().format('yyyy-MM-dd')
    
    // Performance
    max_cpus = 32
    max_memory = '128.GB'
    max_time = '48.h'
}

// Process configuration
process {
    // Default resources
    cpus = params.threads
    memory = params.memory
    time = '6.h'
    
    // Container settings  
    container = 'ubuntu:22.04'
    
    // Error handling
    errorStrategy = 'retry'
    maxRetries = 2
    
    // Per-process configuration
    withLabel: 'fastqc' {
        cpus = 4
        memory = '8.GB'
        container = 'biocontainers/fastqc:v0.12.1_cv1'
    }
    
    withLabel: 'bwa_mem2' {
        cpus = { 16 * task.attempt }
        memory = { 32.GB * task.attempt }
        time = '12.h'
        container = 'biocontainers/bwa-mem2:v2.2.1_cv1'
    }
    
    withLabel: 'star' {
        cpus = { 16 * task.attempt }
        memory = { 64.GB * task.attempt }
        time = '8.h'
        container = 'biocontainers/star:2.7.10b_cv1'
    }
    
    withLabel: 'deepvariant' {
        cpus = 8
        memory = '16.GB'
        time = '24.h'
        container = 'google/deepvariant:1.5.0'
    }
    
    withLabel: 'salmon' {
        cpus = 8
        memory = '16.GB'
        container = 'combinelab/salmon:1.10.2'
    }
    
    withLabel: 'duckdb' {
        cpus = 2
        memory = '8.GB'
        container = 'ubuntu:22.04'
    }
}

// Reporting
report {
    enabled = true
    file = "${params.outdir}/reports/execution_report.html"
}

timeline {
    enabled = true
    file = "${params.outdir}/reports/timeline.html"
}

trace {
    enabled = true
    file = "${params.outdir}/reports/trace.txt"
}

dag {
    enabled = true
    file = "${params.outdir}/reports/pipeline_dag.svg"
}

// Manifest
manifest {
    name = 'clinical-genomics-pipeline'
    description = 'Open-source clinical genomics pipeline for DNA and RNA analysis'
    version = '1.0.0'
    nextflowVersion = '>=22.10.0'
    homePage = 'https://github.com/your-org/clinical-genomics-pipeline'
    author = 'Clinical Genomics Team'
    mainScript = 'main.nf'
}

// Profile configurations
profiles {
    local {
        process.executor = 'local'
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
    
    slurm {
        process.executor = 'slurm'
        process.queue = 'normal'
        process.module = 'nextflow'
    }
    
    aws {
        includeConfig 'configs/aws.config'
    }
    
    azure {
        includeConfig 'configs/azure.config'
    }
    
    test {
        includeConfig 'configs/test.config'
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
}