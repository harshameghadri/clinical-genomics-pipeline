name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nextflow-version: ['22.10.0', '23.04.0', 'latest']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Nextflow
      run: |
        wget -qO- https://get.nextflow.io | bash
        sudo mv nextflow /usr/local/bin/
        nextflow -version
    
    - name: Setup Docker
      uses: docker/setup-buildx-action@v2
    
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
    
    - name: Run unit tests
      run: |
        python -m pytest tests/test_modules.py -v --tb=short
    
    - name: Setup test data
      run: |
        cd data/test
        ./download_test_data.sh
    
    - name: Run pipeline syntax check
      run: |
        nextflow run main.nf --help
    
    - name: Run pipeline dry run
      run: |
        nextflow run main.nf -profile test -stub-run --outdir test_results
    
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.nextflow-version }}
        path: |
          test_results/
          .nextflow.log

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Nextflow linting
      run: |
        wget -qO- https://get.nextflow.io | bash
        sudo mv nextflow /usr/local/bin/
        nextflow run main.nf --help

  container-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check container definitions
      run: |
        # Check that all container definitions exist
        for def_file in containers/*.def; do
          echo "Checking $def_file"
          if [[ -f "$def_file" ]]; then
            echo "✓ $def_file exists"
          else
            echo "✗ $def_file missing"
            exit 1
          fi
        done